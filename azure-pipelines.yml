# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'dc637954-eec2-47d8-9cf7-bc9a0c62779f'
  imageRepository: 'kotkiipieski'
  containerRegistry: 'pjatksuml3scrummasterow.azurecr.io'
  dockerfileBackendPath: '$(Build.SourcesDirectory)/backend/Dockerfile'
  dockerfileFrontendPath: '$(Build.SourcesDirectory)/frontend/Dockerfile'
  dockerfileMigrationsPath: '$(Build.SourcesDirectory)/backend/migrations.Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  aksResourceGroup: 'PJATK-SUML'
  aksClusterName: 'KotkiiPieskiCluster'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: 'Default'
    steps:
    - task: Docker@2
      displayName: Build and push backend image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)/backend
        dockerfile: $(dockerfileBackendPath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push frontend image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)/frontend
        dockerfile: $(dockerfileFrontendPath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    
    - task: Docker@2
      displayName: Build and push migrations image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)/migrations
        dockerfile: $(dockerfileMigrationsPath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy to Kubernetes
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureCLI@2
      displayName: kubectl apply
      inputs:
        azureSubscription: 'PJATK-SUML-Connection'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials \
            --resource-group $(aksResourceGroup) \
            --name $(aksClusterName) \
            --overwrite-existing

          echo "Applying Kubernetes manifests..."
          kubectl apply -f $(Build.SourcesDirectory)/k8s/
    
